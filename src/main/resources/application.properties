# ============================================
# PROFILE SERVICE CONFIGURATION
# ============================================

# Application Settings
spring.application.name=profile
# Available profiles: dev (H2), mysql (MySQL), batch (Batch Processing)
spring.profiles.active=mysql

# Server Configuration
server.port=8080

# Database Configuration
# Database settings are profile-specific:
# - dev profile uses H2 in-memory database
# - mysql profile uses MySQL database
# See respective profile properties files for details

# Hibernate Configuration
# Options: none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update
# Show SQL queries in logs
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true  # Format SQL queries for better readability
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# H2 Console Configuration (Development Only)
# Enable H2 web console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console    # H2 console URL path

# Cache Configuration
spring.cache.cache-names=profiles     # Cache names for the application
spring.cache.caffeine.spec=maximumSize=250,expireAfterAccess=600s  # Cache size and expiration

# Task Configuration
# Core thread pool size for async tasks
spring.task.execution.pool.core-size=8
# Thread pool size for scheduled tasks
spring.task.scheduling.pool.size=2

# Logging Configuration
logging.pattern.console=[%date{ISO8601}] [%clr(%-5level)] [${PID:-}] [%-15.15thread] [%-40.40logger{39}] [%m]%n
# Spring framework logging level
logging.level.org.springframework=INFO
# SQL query logging level
logging.level.org.hibernate.SQL=DEBUG

# CORS Configuration
leanstacks.cors.filter-registration-path=/**
leanstacks.cors.allow-credentials=false
leanstacks.cors.allowed-headers=accept,authorization,content-type
leanstacks.cors.allowed-methods=GET,OPTIONS,POST,PUT,PATCH,DELETE
leanstacks.cors.allowed-origins=*
leanstacks.cors.exposed-headers=
leanstacks.cors.max-age-seconds=3600
